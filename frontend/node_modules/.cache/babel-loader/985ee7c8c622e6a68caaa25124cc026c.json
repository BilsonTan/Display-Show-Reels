{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\show_reel\\\\frontend\\\\src\\\\components\\\\CreateReel\\\\SelectClips.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport \"./SelectClips.css\";\nimport { convertTime } from \"./TimeCode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectClips = () => {\n  _s();\n\n  const [clipList, setClipList] = useState([]);\n  const [duration, setDuration] = useState(\"\");\n  useEffect(() => {\n    fetch(\"http://localhost:8000/select-clips\").then(res => res.json()).then(data => setClipList(data));\n  }, []); // const handleTick = event =>{\n  //   if(event.target.checked){\n  //   }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: clipList.map(_ref => {\n      let {\n        name,\n        definition,\n        standard,\n        startTimecode,\n        endTimecode\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clip-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Clip name: \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Defintion: \", definition]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Standard: \", standard, \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkbox\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: \"checkId\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this), \" Select Clip?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Start time: \", startTimecode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"End time: \", endTimecode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" Duration: \", convertTime(endTimecode)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SelectClips, \"gBo0LmwlvKNpPg/LwpVHOalJfpA=\");\n\n_c = SelectClips;\nexport default SelectClips;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectClips\");","map":{"version":3,"names":["useEffect","useState","convertTime","SelectClips","clipList","setClipList","duration","setDuration","fetch","then","res","json","data","map","name","definition","standard","startTimecode","endTimecode"],"sources":["C:/Users/User/Desktop/show_reel/frontend/src/components/CreateReel/SelectClips.tsx"],"sourcesContent":["import { FC, useEffect, useState } from \"react\";\r\nimport { ClipTypeObj } from \"../../types/ClipTypes\";\r\nimport \"./SelectClips.css\";\r\nimport { convertTime } from \"./TimeCode\";\r\n\r\nconst SelectClips: FC = () => {\r\n  const [clipList, setClipList] = useState<ClipTypeObj[]>([]);\r\n  const [duration, setDuration] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8000/select-clips\")\r\n      .then((res) => res.json())\r\n      .then((data) => setClipList(data));\r\n  }, []);\r\n\r\n  // const handleTick = event =>{\r\n  //   if(event.target.checked){\r\n\r\n  //   }\r\n  // }\r\n  return (\r\n    <div className=\"container\">\r\n      {clipList.map(\r\n        ({ name, definition, standard, startTimecode, endTimecode }) => (\r\n          <div className=\"clip-card\">\r\n            <div>Clip name: {name}</div>\r\n            <div>Defintion: {definition}</div>\r\n            <div>\r\n              Standard: {standard}{\" \"}\r\n              <div className=\"checkbox\">\r\n                <input type=\"checkbox\" id=\"checkId\" /> Select Clip?\r\n              </div>{\" \"}\r\n            </div>\r\n            <div>Start time: {startTimecode}</div>\r\n            <div>End time: {endTimecode}</div>\r\n            <div> Duration: {convertTime(endTimecode)}</div>\r\n          </div>\r\n        )\r\n      )}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectClips;\r\n"],"mappings":";;;AAAA,SAAaA,SAAb,EAAwBC,QAAxB,QAAwC,OAAxC;AAEA,OAAO,mBAAP;AACA,SAASC,WAAT,QAA4B,YAA5B;;;AAEA,MAAMC,WAAe,GAAG,MAAM;EAAA;;EAC5B,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAgB,EAAhB,CAAxC;EACA,MAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;EAEAD,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAC,oCAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAUP,WAAW,CAACO,IAAD,CAF7B;EAGD,CAJQ,EAIN,EAJM,CAAT,CAJ4B,CAU5B;EACA;EAEA;EACA;;EACA,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,UACGR,QAAQ,CAACS,GAAT,CACC;MAAA,IAAC;QAAEC,IAAF;QAAQC,UAAR;QAAoBC,QAApB;QAA8BC,aAA9B;QAA6CC;MAA7C,CAAD;MAAA,oBACE;QAAK,SAAS,EAAC,WAAf;QAAA,wBACE;UAAA,0BAAiBJ,IAAjB;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA,0BAAiBC,UAAjB;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE;UAAA,yBACaC,QADb,EACuB,GADvB,eAEE;YAAK,SAAS,EAAC,UAAf;YAAA,wBACE;cAAO,IAAI,EAAC,UAAZ;cAAuB,EAAE,EAAC;YAA1B;cAAA;cAAA;cAAA;YAAA,QADF;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF,EAIS,GAJT;QAAA;UAAA;UAAA;UAAA;QAAA,QAHF,eASE;UAAA,2BAAkBC,aAAlB;QAAA;UAAA;UAAA;UAAA;QAAA,QATF,eAUE;UAAA,yBAAgBC,WAAhB;QAAA;UAAA;UAAA;UAAA;QAAA,QAVF,eAWE;UAAA,0BAAiBhB,WAAW,CAACgB,WAAD,CAA5B;QAAA;UAAA;UAAA;UAAA;QAAA,QAXF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF;IAAA,CADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD,CArCD;;GAAMf,W;;KAAAA,W;AAuCN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}