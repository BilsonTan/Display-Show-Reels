{"ast":null,"code":"import moment from \"moment\";\nimport \"moment-duration-format\";\n\nfunction convertFrames(time, standard) {\n  const convertedTime = time.split(\":\");\n  const frames = convertedTime[3];\n  const framesPerSec = standard === \"NTSC\" ? 30 : 25;\n  const milliSecs = Number(framesPerSec) * frames;\n  const newTime = convertedTime[0] + \":\" + convertedTime[1] + \":\" + convertedTime[2] + \".\" + String(milliSecs);\n  return newTime;\n}\n\nexport function convertTimetoMilli(time) {\n  const splitTime = time.split(\":\");\n}\nexport function sumTime(time1, time2, standard) {\n  return moment.duration(convertFrames(time1, standard)).add(moment.duration(convertFrames(time2, standard))).format('hh:mm:ss:SS', {\n    trim: false\n  });\n}\nexport function diffTime(time1, time2, standard) {\n  var newTime1 = moment(convertFrames(time1, standard), 'hh:mm:ss:SS');\n  var newTime2 = moment(convertFrames(time2, standard), 'hh:mm:ss:SS');\n  return moment.duration(newTime1.diff(newTime2)).format('hh:mm:ss:SS', {\n    trim: false\n  });\n}","map":{"version":3,"names":["moment","convertFrames","time","standard","convertedTime","split","frames","framesPerSec","milliSecs","Number","newTime","String","convertTimetoMilli","splitTime","sumTime","time1","time2","duration","add","format","trim","diffTime","newTime1","newTime2","diff"],"sources":["C:/Users/User/Desktop/show_reel/frontend/src/utils/data-utils.ts"],"sourcesContent":["import moment from \"moment\";\r\nimport \"moment-duration-format\";\r\n\r\nfunction convertFrames(time:any, standard:any){\r\n    const convertedTime = time.split(\":\");\r\n    const frames = convertedTime[3];\r\n    const framesPerSec = standard === \"NTSC\" ? 30:25;\r\n    const milliSecs = Number(framesPerSec) * frames;\r\n    const newTime = convertedTime[0]+\":\"+convertedTime[1]+\":\"+convertedTime[2]+\".\"+String(milliSecs);\r\n    return newTime;\r\n}\r\n\r\nexport function convertTimetoMilli(time:any){\r\n  const splitTime = time.split(\":\");\r\n}\r\n\r\nexport function sumTime(time1:any, time2: any, standard: any){\r\n\r\n    return moment.duration(convertFrames(time1, standard)).add(moment.duration(convertFrames(time2, standard))).format('hh:mm:ss:SS', {trim: false});    \r\n    \r\n}\r\n\r\nexport function diffTime(time1:any, time2: any, standard: any){\r\n    var newTime1 = moment(convertFrames(time1, standard), 'hh:mm:ss:SS');\r\n    var newTime2 = moment(convertFrames(time2, standard), 'hh:mm:ss:SS');\r\n\r\n    return moment.duration(newTime1.diff(newTime2)).format('hh:mm:ss:SS', {trim: false});    \r\n\r\n}"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAO,wBAAP;;AAEA,SAASC,aAAT,CAAuBC,IAAvB,EAAiCC,QAAjC,EAA8C;EAC1C,MAAMC,aAAa,GAAGF,IAAI,CAACG,KAAL,CAAW,GAAX,CAAtB;EACA,MAAMC,MAAM,GAAGF,aAAa,CAAC,CAAD,CAA5B;EACA,MAAMG,YAAY,GAAGJ,QAAQ,KAAK,MAAb,GAAsB,EAAtB,GAAyB,EAA9C;EACA,MAAMK,SAAS,GAAGC,MAAM,CAACF,YAAD,CAAN,GAAuBD,MAAzC;EACA,MAAMI,OAAO,GAAGN,aAAa,CAAC,CAAD,CAAb,GAAiB,GAAjB,GAAqBA,aAAa,CAAC,CAAD,CAAlC,GAAsC,GAAtC,GAA0CA,aAAa,CAAC,CAAD,CAAvD,GAA2D,GAA3D,GAA+DO,MAAM,CAACH,SAAD,CAArF;EACA,OAAOE,OAAP;AACH;;AAED,OAAO,SAASE,kBAAT,CAA4BV,IAA5B,EAAqC;EAC1C,MAAMW,SAAS,GAAGX,IAAI,CAACG,KAAL,CAAW,GAAX,CAAlB;AACD;AAED,OAAO,SAASS,OAAT,CAAiBC,KAAjB,EAA4BC,KAA5B,EAAwCb,QAAxC,EAAsD;EAEzD,OAAOH,MAAM,CAACiB,QAAP,CAAgBhB,aAAa,CAACc,KAAD,EAAQZ,QAAR,CAA7B,EAAgDe,GAAhD,CAAoDlB,MAAM,CAACiB,QAAP,CAAgBhB,aAAa,CAACe,KAAD,EAAQb,QAAR,CAA7B,CAApD,EAAqGgB,MAArG,CAA4G,aAA5G,EAA2H;IAACC,IAAI,EAAE;EAAP,CAA3H,CAAP;AAEH;AAED,OAAO,SAASC,QAAT,CAAkBN,KAAlB,EAA6BC,KAA7B,EAAyCb,QAAzC,EAAuD;EAC1D,IAAImB,QAAQ,GAAGtB,MAAM,CAACC,aAAa,CAACc,KAAD,EAAQZ,QAAR,CAAd,EAAiC,aAAjC,CAArB;EACA,IAAIoB,QAAQ,GAAGvB,MAAM,CAACC,aAAa,CAACe,KAAD,EAAQb,QAAR,CAAd,EAAiC,aAAjC,CAArB;EAEA,OAAOH,MAAM,CAACiB,QAAP,CAAgBK,QAAQ,CAACE,IAAT,CAAcD,QAAd,CAAhB,EAAyCJ,MAAzC,CAAgD,aAAhD,EAA+D;IAACC,IAAI,EAAE;EAAP,CAA/D,CAAP;AAEH"},"metadata":{},"sourceType":"module"}