{"ast":null,"code":"import * as moment from \"moment\";\nimport \"moment-duration-format\";\n\nfunction convertTime(time) {\n  const convertedTime = time.split(\":\");\n  const millisecs = time[3];\n  const newTime = time[0] + \":\" + time[1] + \":\" + time[2] + \".\" + time[3];\n  return newTime;\n}\n\nexport function sumTime(time1, time2) {\n  return moment.duration(convertTime(time1)).add(moment.duration(convertTime(time2))).format('hh:mm:ss.SSS', {\n    trim: false\n  });\n}","map":{"version":3,"names":["moment","convertTime","time","convertedTime","split","millisecs","newTime","sumTime","time1","time2","duration","add","format","trim"],"sources":["C:/Users/User/Desktop/show_reel/frontend/src/components/CreateReel/TimeCode.tsx"],"sourcesContent":["import * as moment from \"moment\";\r\nimport \"moment-duration-format\";\r\n\r\nfunction convertTime(time:any){\r\n    const convertedTime = time.split(\":\");\r\n    const millisecs = time[3];\r\n    const newTime = time[0]+\":\"+time[1]+\":\"+time[2]+\".\"+time[3];\r\n    return newTime;\r\n}\r\n\r\nexport function sumTime(time1:any, time2: any){\r\n\r\n    return moment.duration(convertTime(time1)).add(moment.duration(convertTime(time2))).format('hh:mm:ss.SSS', {trim: false});    \r\n    \r\n}"],"mappings":"AAAA,OAAO,KAAKA,MAAZ,MAAwB,QAAxB;AACA,OAAO,wBAAP;;AAEA,SAASC,WAAT,CAAqBC,IAArB,EAA8B;EAC1B,MAAMC,aAAa,GAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,CAAtB;EACA,MAAMC,SAAS,GAAGH,IAAI,CAAC,CAAD,CAAtB;EACA,MAAMI,OAAO,GAAGJ,IAAI,CAAC,CAAD,CAAJ,GAAQ,GAAR,GAAYA,IAAI,CAAC,CAAD,CAAhB,GAAoB,GAApB,GAAwBA,IAAI,CAAC,CAAD,CAA5B,GAAgC,GAAhC,GAAoCA,IAAI,CAAC,CAAD,CAAxD;EACA,OAAOI,OAAP;AACH;;AAED,OAAO,SAASC,OAAT,CAAiBC,KAAjB,EAA4BC,KAA5B,EAAuC;EAE1C,OAAOT,MAAM,CAACU,QAAP,CAAgBT,WAAW,CAACO,KAAD,CAA3B,EAAoCG,GAApC,CAAwCX,MAAM,CAACU,QAAP,CAAgBT,WAAW,CAACQ,KAAD,CAA3B,CAAxC,EAA6EG,MAA7E,CAAoF,cAApF,EAAoG;IAACC,IAAI,EAAE;EAAP,CAApG,CAAP;AAEH"},"metadata":{},"sourceType":"module"}